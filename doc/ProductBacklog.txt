Product backlog

R1 - Desenvolver Sistemas de Autenticação. 

Descrição: O sistema deverá permitir a autenticação de todo usuário. Apenas usuários cadastrados poderão 
se autenticar no sistema. O usuário fornecerá seu nome de usuário e senha e, após a validação no sistema,
o usuário estará apto a realizar operações da área restrita do sistema. Os usuários do sistema
são: cliente (usuário habilitado a comprar pacotes de viagem pelo sistema), atendente (usuário que opera  
o sistema, habilitado a manter os cadastros do portal e consultar os pacotes adquiridos pelos clientes),
administrador (usuário habilitado a realizar as configurações de segurança e ações de administração do sistema).

Roles: Clientes, Agencias de viagem, Administradores de Voos  (AV),atendentes
Administrador geral (pode cadastrar todos os demais e atribuir papeis)
Desenvolver CRUD de usuÃ¡rios e Roles.
BD: 
usuario (idusuario, nome, senha)
role(idrole, descricao)
==================================================================================================================
R2 - Os clientes serÃ£o cadastrados no sistema de forma automÃ¡tica assim que o mesmo efetuar a compra de uma passagem. O cadastro ficarÃ¡ armazenado no sistema pelo perÃ­odo de 1 ano, apÃ³s esse tempo o registro serÃ¡ inativado no sistema e setado como removido no banco de dados. Caso o cliente realize a compra de uma nova passagem apÃ³s o perÃ­odo de 1 ano, seu registro serÃ¡ reativado no sistema e reinserido no banco de dados. Durante o primeiro login no sistema o cliente deverÃ¡ confirmar seus dados e escolher uma senha, apÃ³s escolher sua senha ele poderÃ¡ logar no sistema utilizando seu email e senha.
R2.1- Caso o usuÃ¡rio queira recuperar sua senha o mesmo deverÃ¡ clicar na opÃ§Ã£o "Esqueci minha senha", apÃ³s isso o sistema irÃ¡ disparar um email para recuperaÃ§Ã£o de senha. ApÃ³s confirmar o email o usuÃ¡rio terÃ¡ a opÃ§Ã£o de escolher uma nova senha. SerÃ¡ guardado no banco de dados um hash da senha.
BD:
cliente (id, cpf, rg, passaporte, nome_cliente, endereco, email)
cliente_login(id_cliente,password)

==================================================================================================================
R3 - CRUD aeroportos - somente AV
O funcionario com permissao irá cadastrar os aeroportos e as aeronaves, e apos o cadastro da viagem
no sistema devera colocar as latitude e longitudepara ser gerada as coordenadas

BD:
aeroporto(idAeroporto, nome,sigla, destino, horario, distancia, latitude, longitude, escalas)

==================================================================================================================
R4 - CRUD aeronaves - somente AV
O sistema deverá permitir cadastros, atualizações, exclusões e consultas das aeronaves disponiveis por empresa ou geral
BD:
aeronave(id, modelo, quantidade_assentos, tempo_de_voo, fk_empresa)
fabricante(id, nome, )
==================================================================================================================

R5 - CRUD Rotas - somente AV
R5.1 O administrador do sistema deve ser capaz de armazenar dados sobre o voo do usuário assim como hora, local de saída, destino e aeronaves disponíveis para levantar voo. E também deve ser possível editar esses dados, remover uma rota de um voo e também deletar. Esses dados serão fixados até que o administrador altere novamente os dados do voo.
  R5.2 Se os dados sobre o voo forem removidas ou deletadas os dados deverão ser desconsiderados para os usuários do sistema.
 
 DB:
 rute(origin_route, destiny_route, airship_available, date, hour)
 ================================================================================================================== 
  
R6 - Gerenciamento de VOOS - somente AV
- associar rota, aeronave, data/hora de embarque, cardÃ¡pio de voo
 O sistema terá a funcionalidade de cadastrar rotas informando a aeronave, data e hora do embarque para que seja apresentada no cardapio de voos, por exemplo:
     Rota: Londrina - Curitiba,
     Aeronave: Boeing 770,
     Data/Hora: 10/12/2017 às 12h.
 DB 
     Pais(id, nome, abreviatura)
     Estado(id, nome, uf, id_pais)
     Cidade(id, nome, id_estado)
    Aeroporto(id, nome, abreviatura, id_cidade)
    Aeronave(id, nome, modelo, ano, qtde_assentos)
    Assento(id, codigo, fileira, coluna, id_aeronave, corredor, janela)
    Rota(id_aeroporto_origem, id_aeroporto_destino, duracao)
    Voo(id, data, observacao, id_rota, id_aeronave)
    VooXPassagem(id_voo, id_passagem, id_assento)
    Passagem(id, id_cliente, valor)
==================================================================================================================

R7 - Cadastrar cardÃ¡pio de voo
- cadastrar conjunto de alimentaÃ§Ã£o
- voos curtos
- voos com + de 2 horas de voo
- voos com + de 5 horas de voo
	* O sistema terá a funcionalidade de cadastrar o cardápio do vôo podendo cadastrar cardápios diferentes para cada tipo de vôo, 
na área de cadastro de cardápio o funcionário terá que inserir o nome dos alimentos e o tipo do vôo, 
por exemplo: vôo curto serão do tipo A,
		Vôo com + de 2 horas de duração serão do tipo B,
		Vôo com + de 2 horas de duração serão do tipo C.
	* O cliente no momento da compra da passagem ele poderá informar se possui alguma restrição alimentar (ex: algum tipo de alergia) 
ou algum tipo de preferência alimentar (ex: vegano, vegetariano).
DB:
cardápio (id, tipoVoo, id_alimento)
alimento (id, idCardapio, nome)
cliente (id, nome, cpf, dataDoVoo, restrição, tipoDeAlimentacao)
restrição (id, id_cliente, nomeAlimento)

==================================================================================================================
R8 - Busca de voos
Facilidade de busca de voo, na qual o usuário poderá filtrar entre o aeroporto de origem/destino e a data do mesmo, o usuário também poderá optar por não ter voo de volta e selecionar diversos trechos durante sua trajetória. 
BD:  
Voo(Id, IdAeroportoOrigem, IdAeroportoDesino, FlConcluido, DataHoraEmbarque, DataHoraDesembarque) 
ClienteXVoo(Id, IdCliente, IdVoo, FlEmbarcado, DataHoraEmbarque, IdClienteXVooSeguinte) 

==================================================================================================================

R9 - Efetuar aquisição de passagem
O sistema deve ser capaz de proporcionar passagens, apresentando informações da 
compra como passaporte/cpf do passageiro, cartão de crédito, código promocional, 
código do programa de milhagem e forma de pagamento. 
Caso menor de idade, informar leis vigentes ou restrição legal quando disponível. 
O sistema também deve informar aquisição de pacotes, podendo escolher o assento 
ou conforto.
BD:

PassageAcquisition(passport,card_number,promotional_code,mileage_program_code,payment_type,current_laws,legal_restriction)

==================================================================================================================

R10 - Gerar boleto para pagamento da compra
 O sistema deverÃ¡ permitir que o cliente escolha o modo de pagamento via boleto bancÃ¡rio no processo de compra da passagem. 
ApÃ³s clicar no botÃ£o visualizar, o boleto serÃ¡ gerado na tela do usuÃ¡rio.
 BD: 
 cliente (idcliente, login, senha, cpf, passaporte, nome, endereco)
 pagamento(idpagamento, idformapagamento, idcliente, data, hora)
 boleto (idboleto, idpagamento, codbarras, codbanco, vencimento, nossonumero, valor, carteira, datadocumento)
==================================================================================================================



R11 â€“ Realizar check-in
ApÃ³s efetuar o login no sistema, o usuÃ¡rio deve informar o seu localizador e seu CPF. Com a identificaÃ§Ã£o feita no aviÃ£o, ele pode escolher, ou nÃ£o, se gostaria de levar mais bagagem acima do padrÃ£o. Finalizando, ele deve escolher o assento de sua preferÃªncia (desde que esteja vazio). ApÃ³s check-in realizado, adicionar milhagem ao cliente atravÃ©s da seguinte equaÃ§Ã£o. 
>>>>>>> 96e21fc32ef75b28bb0abbf4cbe13817d34be8fa
Ex: Distancia: 536 km
536 / 1.5 = 357,33
Preï¿½o 350,00 * 0.1% = 0.35
Milhas 0.35 * 357,33 = 125.
BD:
Cliente (idCliente, cpf, passaporte, nome, endereï¿½o, idBagagem, milhagem)
Bagageiro (idBagagem, idCliente, compartimentoMala*, valorTotal)
*comparimentoMala seria o local/"armï¿½rio" que estariam guardadas as malas.
Aviï¿½o (idAviao, nomeAviï¿½o, assentosDisponiveis, origem, destino, idCliente, idBagagem)

==================================================================================================================

R12 - Despachar malas (atendente)
- gerar etiquetas
- registrar status: esteira, embarque, aviÃ£o x, transferencia, aviÃ£o y, desenbarque, esteira

* Despache de bagagem
 Após check-in do cliente no aeroporto, o atendende deve gerar etiquedas únicas para cada bagagem do cliente, como também, registrar no sistema o status da mesma.
BD: Bagagem(idPassageiro, NumEsteira, NumEmbarque, NumAviao, NumDesembarque) 

==================================================================================================================

R13 - Rastrear malas
Após o despacho da mala a mesma é etiquetada onde na etiqueta consta um código de barras, a cada escala o sistema lê o código de barras e atualiza o local da mala.
 
BD:
bagagens(id_bagagem, id_aviao, id_voo, id_cliente, peso, codigo_barras, local);
atualizacaoMala(id ,fk_id_bagagem,id_aviao, id_voo, peso, data_ent, local_atual, hora_atual, destino_final, fk_codigo_barras);

==================================================================================================================

R14 - Criar pacotes promocionais - somente AV
* Adicionar prmoções para viagens, pacotes com viagens de ida e volta, pacotes de viagens para varios lugares turísticos, etc.
* Deverá ser criado uma tabela pacote, que contém os atributos de destino e preço, opção de ida e volta, id do pacote e id da passagem, para concatenar com a tabela passagem com as informações da passagem ou tabela viagem que contenha o id da passagem assim como a tabela de destino com as informações de cada destino dos voos.
BD:
Pacotes(ID_Pacote, ID_Passagem, nome_destino, ID_Destino, ida_volta, preço)

==================================================================================================================

R15 - Adquirir pacotes promocionais
==================================================================================================================

R16 - Criar interface para sistema externo informar se o cliente possui restriÃ§Ãµes legais
- desenvolver um aplicativo de teste
Usando uma api externa  (Ex:Recordsapi Public Records), ao se cadastrar um usuario se verificará se consta algo no seu cpf.

BD: 
Cliente(idCliente, cpf, passaporte, nome, endereco, idBagagem, milhagem)

==================================================================================================================

R17 - Notificar usuÃ¡rio em caso de cancelamento ou remarcaÃ§Ã£o do voo

==================================================================================================================

R18 - Reconhecimento de retina no cadastro do cliente
+ O sistema deve identificar a retina de um determinado cliente identificando seus pontos. O sistema irá armazenar 512 bytes após a identificação.
BD:
cliente (idcliente, dataColeta, retina)
retina (idretina, pontos)

==================================================================================================================


R19 - Possibilitar AV cancelar voo
O sistema deve permitir ao administrador de voo (logado no sistema) cancelar a decolagem para um determinado local. Deve ser informado ao sistema quais  os motivos de cancelamento do voo e exibir os passageiros desse voo.
BD: 
administradorVoo (idAdministrador, nomeAdministrador, senhaAdministrador);
voo (idVoo, destino, horarioSaida, horarioChegada, motivoCancelamento, idSupervisor, idPiloto, idAeronave, idPassageiro);
==================================================================================================================

R20 - Possibilitar venda da passagem por meio de sistema externo
- desenvolver WebService
- desenvolver sistema para teste

ao  efetuar o login, o cliente pode selecionar compra de passagem online;

BD:
cliente (idcliente, cpf, passaporte, nome, endereco,cidade, numero, cep, uf, sexo, idade,email);
vooIda(idVoo, nomeDestino, horarioChegadaAoDestino,nomeOrigem,horarioSaidaDaOrigem,dataIda);
vooVolta(idVoo, nomeDestino, horarioChegadaAoDestino,nomeOrigem,horarioSaidaDaOrigem, dataVolta);
compra(idCompra, valor, poltronaIda, poltronaVolta idClasse);
classe(idClasse, valor, especifica��o);
horario(idHorario, horarios);

==================================================================================================================

R21 - Criar site principal para clientes (site principal da empresa)
O site principal deve ser limpo, com os imagens e indicações intuitivas para facilitar seu uso, ter a opção de mostrar os horarios disponiveis e preços de viagens que o usuario selecionar, o valor e numero de passagens.

BD:
Consulta (idConsulta, data, hora, num_passagem, origem, destino, valor);
Promocao (idPromocao, data, valor);
Pacote (idPacote, valor, data, tipo);
Hotel (idHotel, nome, cidade, valor, telefone);
Compra (idCompra, valor, data);
Locacao (idLocacao, descricao);

==================================================================================================================

R22 - Gerenciar quais promoÃ§Ãµes e banners devem ser exibidos no site principal (somente av)
SISTEMA
 - desenvolver espaco de banner(s) na tela principal
 - desenvolver tela de gerenciamento de banners. Essa tela deve conter:
     - listagem de todos os banners (que ja foram, estao sendo, ou serao exibidos), junto com a data de inicio/fim de exibicao
     - opcao de edicao de banner
     - opcao de deletar banner 
     - opcao de incluir banner
 - Deve ser possivel acessar o CRUD somente se o usuario logado tiver as permissoes necessarias
 
 BANCO
 O banco possui uma tabela com os dados e imagem da promocao/banner, e os que serao exibidos sao aqueles em que a data de hoje esta entre as datas de inicio e fim.
 - banners(idBanner, nome, dataInicio, dataFim, fileBlob, fileName, indRemovido, idUser)
 
==================================================================================================================

R23 - Atendimento por chat

- O sistema de atendimento por chat, tem como objetivo auxiliar o usuÃ¡rio no esclarecimento de dÃºvidas referentes a passagens, bagagens, remarcaÃ§Ã£o de vÃ´o,
troca de passagem, entre outros.
- O atendimento acontece em tempo real e por motivos de seguranÃ§a, as conversar serÃ£o gravadas juntamente aos ids do usuÃ¡rio e funcionÃ¡rio, a data e o horÃ¡rio.
- O usuÃ¡rio deve estar logado com suas credenciais (login e senha) previamente cadastrados. 
- Informar o cpf para maior agilidade no processo de busca de dados do cliente em questÃ£o.

BD:
-cliente( idCliente, nome, cpf, passaporte, endereco, idade, telefone);
-logChat( idChat, idCliente, idFuncionario, data, hora);
-chat( idChat, data, hora, conteÃºdo); 

=========================================================================================================================R24 - Remarcacao de voo (adiantar voo) - atendente

O sistema deve permitir que o usuario que o mesmo solicite a alteraÃ§Ã£o do voo.
Na ocasiÃ£o de mudanÃ§a de data e/ou horario do voo, serÃ¡ imprescindivel que aÃ§Ã£o seja tomada com pelo ao menos 7 horas de antecedencia.
A alteraÃ§Ã£o estarÃ¡ sujeita a disponibilidade de assentos e serÃ¡ cobrado uma tarifa de acordo com o tipo de passagem.
O atendente consultarÃ¡ primeiramente a disponibilidade do voo requerido. ApÃ³s esta aÃ§Ã£o, caso exista assentos disponiveis, 
serÃ¡ informada ao cliente. Com as informaÃ§Ãµes sobre voo e assento, a efetivaÃ§Ã£o da requisiÃ§Ã£o, se dÃ¡ra da seguinte forma:
-O solicitante fornecerÃ¡ a identificaÃ§Ã£o para qual voo e horario o mesmo estÃ¡ requisitando e algum documento de identificaÃ§Ã£o dele, solicitante, tal como o registro geral ou cpf;
-A atendente farÃ¡ a busca por disponibilidade de assentos no voo requerido,e informarÃ¡ ao solicitante;
-Tendo assentos disponiveis, o solicitante escolherÃ¡ um assento e informarÃ¡ a atendente;
-A atendente, entrarÃ¡ no voo pedido, e clicarÃ¡ em alteraÃ§Ã£o de voo. ReservarÃ¡ o assento desejado pelo cliente, caso nao esteja marcado, e apÃ³s reservar, serÃ¡ imediatamente solicitado sobre quem Ã© o solicitante da troca e em qual voo o mesmo estaria alocado atualmente, ou seja, de qual voo ele estÃ¡ migrando.
-ApÃ³s o processo, serÃ¡ emitida uma nova passagem para o cliente;

BD:

cliente(id, nome, cpf, rg, endereco, telefone, idade, sexo, dtNascimento);
funcionario(id, nome, cpf, cargo, funcao);
voo(id, localPartida, localDestino, horaEmbarque, horaDesembarque, compania, qtdAssentos, assentosDisponiveis);
tipoPassagem(id, descricao);
passagem(id , idVoo, idportao, idCliente, idAssento, idTipo);
assento(id, idVoo, idCliente);
portao(id, idVoo);
logAlteracao(id, idFuncionario, idCliente, idVooAnterior, idVooAtual, comentarios);

=========================================================================================================================

R25 - Fretamento - um cliente pode fretar uma aeronave (um voo), configurar rota e horÃ¡rio de partida
O conceito de Fretamento surgiu na dÃ©cada de 50 na regiÃ£o ABC(SÃ£o Paulo) para a forte industrializaÃ§Ã£o da regiÃ£o, pois era necessitada de transportes de passageiros. Hoje o serviÃ§o de fretamento estÃ¡ presente em todo o paÃ­s em diversos segmentos. O fretamento de um aviÃ£o pode ser feito a um aviÃ£o de grande porte ou pequeno porte para muitas pessoas ou poucas pessoas e atÃ© individualmente. 

- O frete deverÃ¡ ser solicitado antecipado(1 dia / 1 hora antes) pois caso nÃ£o seja solicitado antecipadamente o valor a ser pago deverÃ¡ ser mais alto.
- DeverÃ¡ ter dia/hora para vÃ´os fretados 
- Ter peso mÃ¡ximo de carga para que o frete nÃ£o seja para levar muita bagagem.

Banco de dados:
TABLE Aviao (IdAviao int PRIMARY KEY, Origem String, HorarioChegada Date, HorarioSaida date, Destino String, DisponivelFrete char, Piloto String, EmpresaAerea String, Bagagem double,, Passageiros int, IdAgenda int)
TABLE Agenda (IdAgenda int PRIMARY KEY, Antecipado Char, DiaSolicitaÃ§ao Date,Solicitante String)
TABLE Frete (IdFrete int PRIMARY KEY, DataFretes date, NumeroPassageiros int, Valor double, PesoBagagens double)
TABLE Passageiro (CPF int, Nome String, RG int, Passaporte int, EndereÃ§o endereco, IdPassageiro int PRIMARY KEY, Telefone int, E-mail String)
